policy_module(nodepay, 1.100.1)

########################################
#
# Declarations
#

type nodepay_t;
type nodepay_exec_t;
init_daemon_domain(nodepay_t, nodepay_exec_t)

permissive nodepay_t;

type nodepay_initrc_exec_t;
init_script_file(nodepay_initrc_exec_t)

type nodepay_conf_t;
files_type(nodepay_conf_t)

type nodepay_var_lib_t;
files_type(nodepay_var_lib_t)

type nodepay_var_run_t;
files_type(nodepay_var_run_t)

type nodepay_port_t;
corenet_port(nodepay_port_t)

########################################
#
# nodepay local policy
#
allow nodepay_t self:process { fork };

allow nodepay_t self:fifo_file rw_fifo_file_perms;
allow nodepay_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(nodepay_t, nodepay_conf_t, nodepay_conf_t)
manage_files_pattern(nodepay_t, nodepay_conf_t, nodepay_conf_t)

manage_dirs_pattern(nodepay_t, nodepay_var_lib_t, nodepay_var_lib_t)
manage_files_pattern(nodepay_t, nodepay_var_lib_t, nodepay_var_lib_t)
files_var_lib_filetrans(nodepay_t, nodepay_var_lib_t, { dir file })

manage_dirs_pattern(nodepay_t, nodepay_var_run_t, nodepay_var_run_t)
manage_files_pattern(nodepay_t, nodepay_var_run_t, nodepay_var_run_t)

sysnet_dns_name_resolve(nodepay_t)
corenet_all_recvfrom_unlabeled(nodepay_t)

allow nodepay_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(nodepay_t)
corenet_tcp_sendrecv_generic_node(nodepay_t)
corenet_tcp_sendrecv_all_ports(nodepay_t)
corenet_tcp_bind_generic_node(nodepay_t)

gen_require(`
    type nodepay_port_t;
')
allow nodepay_t nodepay_port_t:tcp_socket name_bind;

gen_require(`
    type nodepay_port_t;
')
allow nodepay_t nodepay_port_t:tcp_socket name_connect;

domain_use_interactive_fds(nodepay_t)

files_read_etc_files(nodepay_t)

miscfiles_read_localization(nodepay_t)

sysnet_dns_name_resolve(nodepay_t)

allow nodepay_t nodepay_exec_t:file execute_no_trans;
allow nodepay_t self:process setsched;
corecmd_exec_ls(nodepay_t)
corenet_tcp_connect_http_port(nodepay_t)
dev_read_urand(nodepay_t)
fs_getattr_xattr_fs(nodepay_t)
kernel_read_system_state(nodepay_t)
